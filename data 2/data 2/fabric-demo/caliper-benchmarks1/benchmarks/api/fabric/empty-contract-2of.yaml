test:
  name: empty-contract-2of
  description: >-
    This is a duration based benchmark targeting a Hyperledger Fabric network
    using the `fixed-asset` NodeJS chaincode
    contract that is interacted with via a Fabric-SDK-Node Gateway. Each test
    round flexes the `emptyContract` method. Rounds run for evaluate and submit
    Gateway routes.
  workers:
    number: 10
  rounds:
    - label: empty-contract-evaluate
      description: >-
        Test an evaluateTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `emptyContract`, which
        immediately returns a null response. This represents the fastest
        possible round trip time for an evaluateTransaction() method that does
        not touch the world state or perform any action.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 100
          startingTps: 10
      workload:
        module: benchmarks/api/fabric/workloads/empty-contract.js
        arguments:
          chaincodeID: fixed-asset
          consensus: false
    - label: empty-contract-submit
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `nullResponse`, which
        immediately returns a null response. This represents the fastest
        possible round trip time for a submitTransaction() method that does not
        touch the world state or perform any action.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 100
          startingTps: 10
      workload:
        module: benchmarks/api/fabric/workloads/empty-contract.js
        arguments:
          chaincodeID: fixed-asset
          consensus: true
    - label: empty-contract-evaluate-fixed-tps
      description: >-
        Test an evaluateTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `emptyContract`, which
        immediately returns a null response. This represents the fastest
        possible round trip time for an evaluateTransaction() method that does
        not touch the world state or perform any action.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 750
      workload:
        module: benchmarks/api/fabric/workloads/empty-contract.js
        arguments:
          chaincodeID: fixed-asset
          consensus: false
    - label: empty-contract-submit-fixed-tps
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `nullResponse`, which
        immediately returns a null response. This represents the fastest
        possible round trip time for a submitTransaction() method that does not
        touch the world state or perform any action.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 350
      workload:
        module: benchmarks/api/fabric/workloads/empty-contract.js
        arguments:
          chaincodeID: fixed-asset
          consensus: true
monitors:
    resource:
    - module: prometheus
      options:
        url: "http://localhost:9090"
        metrics:
          include: [dev-.*, couch, peer, orderer]
          queries:
          - name: Avg Memory (MB)
            query: 'sum(container_memory_rss{name=~".+"}) by (name)'
            step: 10
            label: name
            statistic: avg
            multiplier: 0.000001
          - name:   CPU (%)
            query: sum(rate(container_cpu_usage_seconds_total{name=~".+"}[1m])) by (name)
            step: 10
            label: name
            statistic: avg
            multiplier: 100
          - name: Network In (MB)
            query: sum(rate(container_network_receive_bytes_total{name=~".+"}[1m])) by (name)
            step: 10
            label: name
            statistic: sum
            multiplier: 0.000001
          - name: Network Out (MB)
            query: sum(rate(container_network_transmit_bytes_total{name=~".+"}[1m])) by (name)
            step: 10
            label: name
            statistic: sum
            multiplier: 0.000001
          - name: Disc Write (MB)
            query: sum(rate(container_fs_writes_bytes_total{name=~".+"}[1m])) by (name)
            step: 10
            label: name
            statistic: sum
            multiplier: 0.000001
          - name: Disc Read (MB)
            query: sum(rate(container_fs_reads_bytes_total{name=~".+"}[1m])) by (name)
            step: 10
            label: name
            statistic: sum
            multiplier: 0.000001